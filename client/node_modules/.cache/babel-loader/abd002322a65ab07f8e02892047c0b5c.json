{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:/WebDev/Chat/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"F:/WebDev/Chat/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"F:/WebDev/Chat/client/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"F:/WebDev/Chat/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"F:/WebDev/Chat/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Manager = void 0;\n\nvar engine_io_client_1 = require(\"engine.io-client\");\n\nvar socket_js_1 = require(\"./socket.js\");\n\nvar parser = __importStar(require(\"socket.io-parser\"));\n\nvar on_js_1 = require(\"./on.js\");\n\nvar backo2_js_1 = require(\"./contrib/backo2.js\");\n\nvar component_emitter_1 = require(\"@socket.io/component-emitter\");\n\nvar debug_1 = __importDefault(require(\"debug\")); // debug()\n\n\nvar debug = debug_1.default(\"socket.io-client:manager\"); // debug()\n\nvar Manager = /*#__PURE__*/function (_component_emitter_1$) {\n  _inherits(Manager, _component_emitter_1$);\n\n  var _super = _createSuper(Manager);\n\n  function Manager(uri, opts) {\n    var _this;\n\n    _classCallCheck(this, Manager);\n\n    var _a;\n\n    _this = _super.call(this);\n    _this.nsps = {};\n    _this.subs = [];\n\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = undefined;\n    }\n\n    opts = opts || {};\n    opts.path = opts.path || \"/socket.io\";\n    _this.opts = opts;\n    engine_io_client_1.installTimerFunctions(_assertThisInitialized(_this), opts);\n\n    _this.reconnection(opts.reconnection !== false);\n\n    _this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n\n    _this.reconnectionDelay(opts.reconnectionDelay || 1000);\n\n    _this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n\n    _this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n\n    _this.backoff = new backo2_js_1.Backoff({\n      min: _this.reconnectionDelay(),\n      max: _this.reconnectionDelayMax(),\n      jitter: _this.randomizationFactor()\n    });\n\n    _this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n\n    _this._readyState = \"closed\";\n    _this.uri = uri;\n\n    var _parser = opts.parser || parser;\n\n    _this.encoder = new _parser.Encoder();\n    _this.decoder = new _parser.Decoder();\n    _this._autoConnect = opts.autoConnect !== false;\n    if (_this._autoConnect) _this.open();\n    return _this;\n  }\n\n  _createClass(Manager, [{\n    key: \"reconnection\",\n    value: function reconnection(v) {\n      if (!arguments.length) return this._reconnection;\n      this._reconnection = !!v;\n      return this;\n    }\n  }, {\n    key: \"reconnectionAttempts\",\n    value: function reconnectionAttempts(v) {\n      if (v === undefined) return this._reconnectionAttempts;\n      this._reconnectionAttempts = v;\n      return this;\n    }\n  }, {\n    key: \"reconnectionDelay\",\n    value: function reconnectionDelay(v) {\n      var _a;\n\n      if (v === undefined) return this._reconnectionDelay;\n      this._reconnectionDelay = v;\n      (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n      return this;\n    }\n  }, {\n    key: \"randomizationFactor\",\n    value: function randomizationFactor(v) {\n      var _a;\n\n      if (v === undefined) return this._randomizationFactor;\n      this._randomizationFactor = v;\n      (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n      return this;\n    }\n  }, {\n    key: \"reconnectionDelayMax\",\n    value: function reconnectionDelayMax(v) {\n      var _a;\n\n      if (v === undefined) return this._reconnectionDelayMax;\n      this._reconnectionDelayMax = v;\n      (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n      return this;\n    }\n  }, {\n    key: \"timeout\",\n    value: function timeout(v) {\n      if (!arguments.length) return this._timeout;\n      this._timeout = v;\n      return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n\n  }, {\n    key: \"maybeReconnectOnOpen\",\n    value: function maybeReconnectOnOpen() {\n      // Only try to reconnect if it's the first time we're connecting\n      if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) {\n        // keeps reconnection from firing twice for the same reconnection loop\n        this.reconnect();\n      }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n\n  }, {\n    key: \"open\",\n    value: function open(fn) {\n      var _this2 = this;\n\n      debug(\"readyState %s\", this._readyState);\n      if (~this._readyState.indexOf(\"open\")) return this;\n      debug(\"opening %s\", this.uri);\n      this.engine = new engine_io_client_1.Socket(this.uri, this.opts);\n      var socket = this.engine;\n      var self = this;\n      this._readyState = \"opening\";\n      this.skipReconnect = false; // emit `open`\n\n      var openSubDestroy = on_js_1.on(socket, \"open\", function () {\n        self.onopen();\n        fn && fn();\n      }); // emit `error`\n\n      var errorSub = on_js_1.on(socket, \"error\", function (err) {\n        debug(\"error\");\n        self.cleanup();\n        self._readyState = \"closed\";\n\n        _this2.emitReserved(\"error\", err);\n\n        if (fn) {\n          fn(err);\n        } else {\n          // Only do this if there is no fn to handle the error\n          self.maybeReconnectOnOpen();\n        }\n      });\n\n      if (false !== this._timeout) {\n        var timeout = this._timeout;\n        debug(\"connect attempt will timeout after %d\", timeout);\n\n        if (timeout === 0) {\n          openSubDestroy(); // prevents a race condition with the 'open' event\n        } // set timer\n\n\n        var timer = this.setTimeoutFn(function () {\n          debug(\"connect attempt timed out after %d\", timeout);\n          openSubDestroy();\n          socket.close(); // @ts-ignore\n\n          socket.emit(\"error\", new Error(\"timeout\"));\n        }, timeout);\n\n        if (this.opts.autoUnref) {\n          timer.unref();\n        }\n\n        this.subs.push(function subDestroy() {\n          clearTimeout(timer);\n        });\n      }\n\n      this.subs.push(openSubDestroy);\n      this.subs.push(errorSub);\n      return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect(fn) {\n      return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onopen\",\n    value: function onopen() {\n      debug(\"open\"); // clear old subs\n\n      this.cleanup(); // mark as open\n\n      this._readyState = \"open\";\n      this.emitReserved(\"open\"); // add new subs\n\n      var socket = this.engine;\n      this.subs.push(on_js_1.on(socket, \"ping\", this.onping.bind(this)), on_js_1.on(socket, \"data\", this.ondata.bind(this)), on_js_1.on(socket, \"error\", this.onerror.bind(this)), on_js_1.on(socket, \"close\", this.onclose.bind(this)), on_js_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onping\",\n    value: function onping() {\n      this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"ondata\",\n    value: function ondata(data) {\n      this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"ondecoded\",\n    value: function ondecoded(packet) {\n      this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onerror\",\n    value: function onerror(err) {\n      debug(\"error\", err);\n      this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n\n  }, {\n    key: \"socket\",\n    value: function socket(nsp, opts) {\n      var socket = this.nsps[nsp];\n\n      if (!socket) {\n        socket = new socket_js_1.Socket(this, nsp, opts);\n        this.nsps[nsp] = socket;\n      }\n\n      return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n\n  }, {\n    key: \"_destroy\",\n    value: function _destroy(socket) {\n      var nsps = Object.keys(this.nsps);\n\n      for (var _i = 0, _nsps = nsps; _i < _nsps.length; _i++) {\n        var nsp = _nsps[_i];\n        var _socket = this.nsps[nsp];\n\n        if (_socket.active) {\n          debug(\"socket %s is still active, skipping close\", nsp);\n          return;\n        }\n      }\n\n      this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n\n  }, {\n    key: \"_packet\",\n    value: function _packet(packet) {\n      debug(\"writing packet %j\", packet);\n      var encodedPackets = this.encoder.encode(packet);\n\n      for (var i = 0; i < encodedPackets.length; i++) {\n        this.engine.write(encodedPackets[i], packet.options);\n      }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      debug(\"cleanup\");\n      this.subs.forEach(function (subDestroy) {\n        return subDestroy();\n      });\n      this.subs.length = 0;\n      this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_close\",\n    value: function _close() {\n      debug(\"disconnect\");\n      this.skipReconnect = true;\n      this._reconnecting = false;\n      this.onclose(\"forced close\");\n      if (this.engine) this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onclose\",\n    value: function onclose(reason, description) {\n      debug(\"closed due to %s\", reason);\n      this.cleanup();\n      this.backoff.reset();\n      this._readyState = \"closed\";\n      this.emitReserved(\"close\", reason, description);\n\n      if (this._reconnection && !this.skipReconnect) {\n        this.reconnect();\n      }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"reconnect\",\n    value: function reconnect() {\n      var _this3 = this;\n\n      if (this._reconnecting || this.skipReconnect) return this;\n      var self = this;\n\n      if (this.backoff.attempts >= this._reconnectionAttempts) {\n        debug(\"reconnect failed\");\n        this.backoff.reset();\n        this.emitReserved(\"reconnect_failed\");\n        this._reconnecting = false;\n      } else {\n        var delay = this.backoff.duration();\n        debug(\"will wait %dms before reconnect attempt\", delay);\n        this._reconnecting = true;\n        var timer = this.setTimeoutFn(function () {\n          if (self.skipReconnect) return;\n          debug(\"attempting reconnect\");\n\n          _this3.emitReserved(\"reconnect_attempt\", self.backoff.attempts); // check again for the case socket closed in above events\n\n\n          if (self.skipReconnect) return;\n          self.open(function (err) {\n            if (err) {\n              debug(\"reconnect attempt error\");\n              self._reconnecting = false;\n              self.reconnect();\n\n              _this3.emitReserved(\"reconnect_error\", err);\n            } else {\n              debug(\"reconnect success\");\n              self.onreconnect();\n            }\n          });\n        }, delay);\n\n        if (this.opts.autoUnref) {\n          timer.unref();\n        }\n\n        this.subs.push(function subDestroy() {\n          clearTimeout(timer);\n        });\n      }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onreconnect\",\n    value: function onreconnect() {\n      var attempt = this.backoff.attempts;\n      this._reconnecting = false;\n      this.backoff.reset();\n      this.emitReserved(\"reconnect\", attempt);\n    }\n  }]);\n\n  return Manager;\n}(component_emitter_1.Emitter);\n\nexports.Manager = Manager;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","Manager","engine_io_client_1","require","socket_js_1","parser","on_js_1","backo2_js_1","component_emitter_1","debug_1","debug","default","uri","opts","_a","nsps","subs","path","installTimerFunctions","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","timeout","_readyState","_parser","encoder","Encoder","decoder","Decoder","_autoConnect","autoConnect","open","arguments","length","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","_reconnecting","attempts","reconnect","fn","indexOf","engine","Socket","socket","self","skipReconnect","openSubDestroy","on","onopen","errorSub","err","cleanup","emitReserved","maybeReconnectOnOpen","timer","setTimeoutFn","close","emit","Error","autoUnref","unref","push","subDestroy","clearTimeout","onping","bind","ondata","onerror","onclose","ondecoded","data","add","packet","nsp","keys","active","_close","encodedPackets","encode","i","write","options","forEach","destroy","reason","description","reset","delay","duration","onreconnect","attempt","Emitter"],"sources":["F:/WebDev/Chat/client/node_modules/socket.io-client/build/cjs/manager.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst engine_io_client_1 = require(\"engine.io-client\");\nconst socket_js_1 = require(\"./socket.js\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst on_js_1 = require(\"./on.js\");\nconst backo2_js_1 = require(\"./contrib/backo2.js\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst debug = debug_1.default(\"socket.io-client:manager\"); // debug()\nclass Manager extends component_emitter_1.Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        engine_io_client_1.installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new backo2_js_1.Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = new engine_io_client_1.Socket(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on_js_1.on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on_js_1.on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on_js_1.on(socket, \"ping\", this.onping.bind(this)), on_js_1.on(socket, \"data\", this.ondata.bind(this)), on_js_1.on(socket, \"error\", this.onerror.bind(this)), on_js_1.on(socket, \"close\", this.onclose.bind(this)), on_js_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_js_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"closed due to %s\", reason);\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}