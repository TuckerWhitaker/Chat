{"ast":null,"code":"\"use strict\";\n\nvar _assertThisInitialized = require(\"F:/WebDev/Chat/client/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _classCallCheck = require(\"F:/WebDev/Chat/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"F:/WebDev/Chat/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"F:/WebDev/Chat/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"F:/WebDev/Chat/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Request = exports.Polling = void 0;\n\nvar transport_js_1 = require(\"../transport.js\");\n\nvar debug_1 = __importDefault(require(\"debug\")); // debug()\n\n\nvar yeast_js_1 = require(\"../contrib/yeast.js\");\n\nvar parseqs_js_1 = require(\"../contrib/parseqs.js\");\n\nvar engine_io_parser_1 = require(\"engine.io-parser\");\n\nvar xmlhttprequest_js_1 = require(\"./xmlhttprequest.js\");\n\nvar component_emitter_1 = require(\"@socket.io/component-emitter\");\n\nvar util_js_1 = require(\"../util.js\");\n\nvar globalThis_js_1 = require(\"../globalThis.js\");\n\nvar debug = (0, debug_1.default)(\"engine.io-client:polling\"); // debug()\n\nfunction empty() {}\n\nvar hasXHR2 = function () {\n  var xhr = new xmlhttprequest_js_1.XHR({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n\nvar Polling = /*#__PURE__*/function (_transport_js_1$Trans) {\n  _inherits(Polling, _transport_js_1$Trans);\n\n  var _super = _createSuper(Polling);\n\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  function Polling(opts) {\n    var _this;\n\n    _classCallCheck(this, Polling);\n\n    _this = _super.call(this, opts);\n    _this.polling = false;\n\n    if (typeof location !== \"undefined\") {\n      var isSSL = \"https:\" === location.protocol;\n      var port = location.port; // some user agents have empty `location.port`\n\n      if (!port) {\n        port = isSSL ? \"443\" : \"80\";\n      }\n\n      _this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      _this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n\n\n    var forceBase64 = opts && opts.forceBase64;\n    _this.supportsBinary = hasXHR2 && !forceBase64;\n    return _this;\n  }\n  /**\n   * Transport name.\n   */\n\n\n  _createClass(Polling, [{\n    key: \"name\",\n    get: function get() {\n      return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"doOpen\",\n    value: function doOpen() {\n      this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause(onPause) {\n      var _this2 = this;\n\n      this.readyState = \"pausing\";\n\n      var pause = function pause() {\n        debug(\"paused\");\n        _this2.readyState = \"paused\";\n        onPause();\n      };\n\n      if (this.polling || !this.writable) {\n        var total = 0;\n\n        if (this.polling) {\n          debug(\"we are currently polling - waiting to pause\");\n          total++;\n          this.once(\"pollComplete\", function () {\n            debug(\"pre-pause polling complete\");\n            --total || pause();\n          });\n        }\n\n        if (!this.writable) {\n          debug(\"we are currently writing - waiting to pause\");\n          total++;\n          this.once(\"drain\", function () {\n            debug(\"pre-pause writing complete\");\n            --total || pause();\n          });\n        }\n      } else {\n        pause();\n      }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      debug(\"polling\");\n      this.polling = true;\n      this.doPoll();\n      this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      var _this3 = this;\n\n      debug(\"polling got data %s\", data);\n\n      var callback = function callback(packet) {\n        // if its the first message we consider the transport open\n        if (\"opening\" === _this3.readyState && packet.type === \"open\") {\n          _this3.onOpen();\n        } // if its a close packet, we close the ongoing requests\n\n\n        if (\"close\" === packet.type) {\n          _this3.onClose({\n            description: \"transport closed by the server\"\n          });\n\n          return false;\n        } // otherwise bypass onData and handle the message\n\n\n        _this3.onPacket(packet);\n      }; // decode payload\n\n\n      (0, engine_io_parser_1.decodePayload)(data, this.socket.binaryType).forEach(callback); // if an event did not trigger closing\n\n      if (\"closed\" !== this.readyState) {\n        // if we got data we're not polling\n        this.polling = false;\n        this.emitReserved(\"pollComplete\");\n\n        if (\"open\" === this.readyState) {\n          this.poll();\n        } else {\n          debug('ignoring poll - transport state \"%s\"', this.readyState);\n        }\n      }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"doClose\",\n    value: function doClose() {\n      var _this4 = this;\n\n      var close = function close() {\n        debug(\"writing close packet\");\n\n        _this4.write([{\n          type: \"close\"\n        }]);\n      };\n\n      if (\"open\" === this.readyState) {\n        debug(\"transport open - closing\");\n        close();\n      } else {\n        // in case we're trying to close while\n        // handshaking is in progress (GH-164)\n        debug(\"transport not open - deferring close\");\n        this.once(\"open\", close);\n      }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n\n  }, {\n    key: \"write\",\n    value: function write(packets) {\n      var _this5 = this;\n\n      this.writable = false;\n      (0, engine_io_parser_1.encodePayload)(packets, function (data) {\n        _this5.doWrite(data, function () {\n          _this5.writable = true;\n\n          _this5.emitReserved(\"drain\");\n        });\n      });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"uri\",\n    value: function uri() {\n      var query = this.query || {};\n      var schema = this.opts.secure ? \"https\" : \"http\";\n      var port = \"\"; // cache busting is forced\n\n      if (false !== this.opts.timestampRequests) {\n        query[this.opts.timestampParam] = (0, yeast_js_1.yeast)();\n      }\n\n      if (!this.supportsBinary && !query.sid) {\n        query.b64 = 1;\n      } // avoid port if default for schema\n\n\n      if (this.opts.port && (\"https\" === schema && Number(this.opts.port) !== 443 || \"http\" === schema && Number(this.opts.port) !== 80)) {\n        port = \":\" + this.opts.port;\n      }\n\n      var encodedQuery = (0, parseqs_js_1.encode)(query);\n      var ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n      return schema + \"://\" + (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? \"?\" + encodedQuery : \"\");\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n\n  }, {\n    key: \"request\",\n    value: function request() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      Object.assign(opts, {\n        xd: this.xd,\n        xs: this.xs\n      }, this.opts);\n      return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, fn) {\n      var _this6 = this;\n\n      var req = this.request({\n        method: \"POST\",\n        data: data\n      });\n      req.on(\"success\", fn);\n      req.on(\"error\", function (xhrStatus, context) {\n        _this6.onError(\"xhr post error\", xhrStatus, context);\n      });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"doPoll\",\n    value: function doPoll() {\n      var _this7 = this;\n\n      debug(\"xhr poll\");\n      var req = this.request();\n      req.on(\"data\", this.onData.bind(this));\n      req.on(\"error\", function (xhrStatus, context) {\n        _this7.onError(\"xhr poll error\", xhrStatus, context);\n      });\n      this.pollXhr = req;\n    }\n  }]);\n\n  return Polling;\n}(transport_js_1.Transport);\n\nexports.Polling = Polling;\n\nvar Request = /*#__PURE__*/function (_component_emitter_1$) {\n  _inherits(Request, _component_emitter_1$);\n\n  var _super2 = _createSuper(Request);\n\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  function Request(uri, opts) {\n    var _this8;\n\n    _classCallCheck(this, Request);\n\n    _this8 = _super2.call(this);\n    (0, util_js_1.installTimerFunctions)(_assertThisInitialized(_this8), opts);\n    _this8.opts = opts;\n    _this8.method = opts.method || \"GET\";\n    _this8.uri = uri;\n    _this8.async = false !== opts.async;\n    _this8.data = undefined !== opts.data ? opts.data : null;\n\n    _this8.create();\n\n    return _this8;\n  }\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n\n\n  _createClass(Request, [{\n    key: \"create\",\n    value: function create() {\n      var _this9 = this;\n\n      var opts = (0, util_js_1.pick)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n      opts.xdomain = !!this.opts.xd;\n      opts.xscheme = !!this.opts.xs;\n      var xhr = this.xhr = new xmlhttprequest_js_1.XHR(opts);\n\n      try {\n        debug(\"xhr open %s: %s\", this.method, this.uri);\n        xhr.open(this.method, this.uri, this.async);\n\n        try {\n          if (this.opts.extraHeaders) {\n            xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n            for (var i in this.opts.extraHeaders) {\n              if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n              }\n            }\n          }\n        } catch (e) {}\n\n        if (\"POST\" === this.method) {\n          try {\n            xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n          } catch (e) {}\n        }\n\n        try {\n          xhr.setRequestHeader(\"Accept\", \"*/*\");\n        } catch (e) {} // ie6 check\n\n\n        if (\"withCredentials\" in xhr) {\n          xhr.withCredentials = this.opts.withCredentials;\n        }\n\n        if (this.opts.requestTimeout) {\n          xhr.timeout = this.opts.requestTimeout;\n        }\n\n        xhr.onreadystatechange = function () {\n          if (4 !== xhr.readyState) return;\n\n          if (200 === xhr.status || 1223 === xhr.status) {\n            _this9.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            _this9.setTimeoutFn(function () {\n              _this9.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n\n        debug(\"xhr data %s\", this.data);\n        xhr.send(this.data);\n      } catch (e) {\n        // Need to defer since .create() is called directly from the constructor\n        // and thus the 'error' event can only be only bound *after* this exception\n        // occurs.  Therefore, also, we cannot throw here at all.\n        this.setTimeoutFn(function () {\n          _this9.onError(e);\n        }, 0);\n        return;\n      }\n\n      if (typeof document !== \"undefined\") {\n        this.index = Request.requestsCount++;\n        Request.requests[this.index] = this;\n      }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onError\",\n    value: function onError(err) {\n      this.emitReserved(\"error\", err, this.xhr);\n      this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"cleanup\",\n    value: function cleanup(fromError) {\n      if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n        return;\n      }\n\n      this.xhr.onreadystatechange = empty;\n\n      if (fromError) {\n        try {\n          this.xhr.abort();\n        } catch (e) {}\n      }\n\n      if (typeof document !== \"undefined\") {\n        delete Request.requests[this.index];\n      }\n\n      this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onLoad\",\n    value: function onLoad() {\n      var data = this.xhr.responseText;\n\n      if (data !== null) {\n        this.emitReserved(\"data\", data);\n        this.emitReserved(\"success\");\n        this.cleanup();\n      }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this.cleanup();\n    }\n  }]);\n\n  return Request;\n}(component_emitter_1.Emitter);\n\nexports.Request = Request;\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (typeof document !== \"undefined\") {\n  // @ts-ignore\n  if (typeof attachEvent === \"function\") {\n    // @ts-ignore\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    var terminationEvent = \"onpagehide\" in globalThis_js_1.globalThisShim ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Request","Polling","transport_js_1","require","debug_1","yeast_js_1","parseqs_js_1","engine_io_parser_1","xmlhttprequest_js_1","component_emitter_1","util_js_1","globalThis_js_1","debug","default","empty","hasXHR2","xhr","XHR","xdomain","responseType","opts","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","poll","onPause","readyState","pause","writable","total","once","doPoll","emitReserved","data","callback","packet","type","onOpen","onClose","description","onPacket","decodePayload","socket","binaryType","forEach","close","write","packets","encodePayload","doWrite","query","schema","timestampRequests","timestampParam","yeast","sid","b64","Number","encodedQuery","encode","ipv6","indexOf","path","length","assign","uri","fn","req","request","method","on","xhrStatus","context","onError","onData","bind","pollXhr","Transport","installTimerFunctions","async","undefined","create","pick","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","setTimeoutFn","send","document","index","requestsCount","requests","err","cleanup","fromError","abort","responseText","Emitter","attachEvent","unloadHandler","addEventListener","terminationEvent","globalThisShim"],"sources":["F:/WebDev/Chat/client/node_modules/engine.io-client/build/cjs/transports/polling.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Request = exports.Polling = void 0;\nconst transport_js_1 = require(\"../transport.js\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst yeast_js_1 = require(\"../contrib/yeast.js\");\nconst parseqs_js_1 = require(\"../contrib/parseqs.js\");\nconst engine_io_parser_1 = require(\"engine.io-parser\");\nconst xmlhttprequest_js_1 = require(\"./xmlhttprequest.js\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst util_js_1 = require(\"../util.js\");\nconst globalThis_js_1 = require(\"../globalThis.js\");\nconst debug = (0, debug_1.default)(\"engine.io-client:polling\"); // debug()\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new xmlhttprequest_js_1.XHR({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nclass Polling extends transport_js_1.Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            debug(\"paused\");\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                debug(\"we are currently polling - waiting to pause\");\n                total++;\n                this.once(\"pollComplete\", function () {\n                    debug(\"pre-pause polling complete\");\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                debug(\"we are currently writing - waiting to pause\");\n                total++;\n                this.once(\"drain\", function () {\n                    debug(\"pre-pause writing complete\");\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        debug(\"polling\");\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        debug(\"polling got data %s\", data);\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        (0, engine_io_parser_1.decodePayload)(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n                debug('ignoring poll - transport state \"%s\"', this.readyState);\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            debug(\"writing close packet\");\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            debug(\"transport open - closing\");\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            debug(\"transport not open - deferring close\");\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        (0, engine_io_parser_1.encodePayload)(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = (0, yeast_js_1.yeast)();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = (0, parseqs_js_1.encode)(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        debug(\"xhr poll\");\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexports.Polling = Polling;\nclass Request extends component_emitter_1.Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        (0, util_js_1.installTimerFunctions)(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = (0, util_js_1.pick)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new xmlhttprequest_js_1.XHR(opts));\n        try {\n            debug(\"xhr open %s: %s\", this.method, this.uri);\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            debug(\"xhr data %s\", this.data);\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nexports.Request = Request;\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis_js_1.globalThisShim ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}