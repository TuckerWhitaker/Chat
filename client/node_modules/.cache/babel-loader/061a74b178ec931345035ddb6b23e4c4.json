{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Manager = void 0;\n\nconst engine_io_client_1 = require(\"engine.io-client\");\n\nconst socket_js_1 = require(\"./socket.js\");\n\nconst parser = __importStar(require(\"socket.io-parser\"));\n\nconst on_js_1 = require(\"./on.js\");\n\nconst backo2_js_1 = require(\"./contrib/backo2.js\");\n\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\n\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\n\n\nconst debug = debug_1.default(\"socket.io-client:manager\"); // debug()\n\nclass Manager extends component_emitter_1.Emitter {\n  constructor(uri, opts) {\n    var _a;\n\n    super();\n    this.nsps = {};\n    this.subs = [];\n\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = undefined;\n    }\n\n    opts = opts || {};\n    opts.path = opts.path || \"/socket.io\";\n    this.opts = opts;\n    engine_io_client_1.installTimerFunctions(this, opts);\n    this.reconnection(opts.reconnection !== false);\n    this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n    this.reconnectionDelay(opts.reconnectionDelay || 1000);\n    this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n    this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n    this.backoff = new backo2_js_1.Backoff({\n      min: this.reconnectionDelay(),\n      max: this.reconnectionDelayMax(),\n      jitter: this.randomizationFactor()\n    });\n    this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n    this._readyState = \"closed\";\n    this.uri = uri;\n\n    const _parser = opts.parser || parser;\n\n    this.encoder = new _parser.Encoder();\n    this.decoder = new _parser.Decoder();\n    this._autoConnect = opts.autoConnect !== false;\n    if (this._autoConnect) this.open();\n  }\n\n  reconnection(v) {\n    if (!arguments.length) return this._reconnection;\n    this._reconnection = !!v;\n    return this;\n  }\n\n  reconnectionAttempts(v) {\n    if (v === undefined) return this._reconnectionAttempts;\n    this._reconnectionAttempts = v;\n    return this;\n  }\n\n  reconnectionDelay(v) {\n    var _a;\n\n    if (v === undefined) return this._reconnectionDelay;\n    this._reconnectionDelay = v;\n    (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n    return this;\n  }\n\n  randomizationFactor(v) {\n    var _a;\n\n    if (v === undefined) return this._randomizationFactor;\n    this._randomizationFactor = v;\n    (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n    return this;\n  }\n\n  reconnectionDelayMax(v) {\n    var _a;\n\n    if (v === undefined) return this._reconnectionDelayMax;\n    this._reconnectionDelayMax = v;\n    (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n    return this;\n  }\n\n  timeout(v) {\n    if (!arguments.length) return this._timeout;\n    this._timeout = v;\n    return this;\n  }\n  /**\n   * Starts trying to reconnect if reconnection is enabled and we have not\n   * started reconnecting yet\n   *\n   * @private\n   */\n\n\n  maybeReconnectOnOpen() {\n    // Only try to reconnect if it's the first time we're connecting\n    if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) {\n      // keeps reconnection from firing twice for the same reconnection loop\n      this.reconnect();\n    }\n  }\n  /**\n   * Sets the current transport `socket`.\n   *\n   * @param {Function} fn - optional, callback\n   * @return self\n   * @public\n   */\n\n\n  open(fn) {\n    debug(\"readyState %s\", this._readyState);\n    if (~this._readyState.indexOf(\"open\")) return this;\n    debug(\"opening %s\", this.uri);\n    this.engine = new engine_io_client_1.Socket(this.uri, this.opts);\n    const socket = this.engine;\n    const self = this;\n    this._readyState = \"opening\";\n    this.skipReconnect = false; // emit `open`\n\n    const openSubDestroy = on_js_1.on(socket, \"open\", function () {\n      self.onopen();\n      fn && fn();\n    }); // emit `error`\n\n    const errorSub = on_js_1.on(socket, \"error\", err => {\n      debug(\"error\");\n      self.cleanup();\n      self._readyState = \"closed\";\n      this.emitReserved(\"error\", err);\n\n      if (fn) {\n        fn(err);\n      } else {\n        // Only do this if there is no fn to handle the error\n        self.maybeReconnectOnOpen();\n      }\n    });\n\n    if (false !== this._timeout) {\n      const timeout = this._timeout;\n      debug(\"connect attempt will timeout after %d\", timeout);\n\n      if (timeout === 0) {\n        openSubDestroy(); // prevents a race condition with the 'open' event\n      } // set timer\n\n\n      const timer = this.setTimeoutFn(() => {\n        debug(\"connect attempt timed out after %d\", timeout);\n        openSubDestroy();\n        socket.close(); // @ts-ignore\n\n        socket.emit(\"error\", new Error(\"timeout\"));\n      }, timeout);\n\n      if (this.opts.autoUnref) {\n        timer.unref();\n      }\n\n      this.subs.push(function subDestroy() {\n        clearTimeout(timer);\n      });\n    }\n\n    this.subs.push(openSubDestroy);\n    this.subs.push(errorSub);\n    return this;\n  }\n  /**\n   * Alias for open()\n   *\n   * @return self\n   * @public\n   */\n\n\n  connect(fn) {\n    return this.open(fn);\n  }\n  /**\n   * Called upon transport open.\n   *\n   * @private\n   */\n\n\n  onopen() {\n    debug(\"open\"); // clear old subs\n\n    this.cleanup(); // mark as open\n\n    this._readyState = \"open\";\n    this.emitReserved(\"open\"); // add new subs\n\n    const socket = this.engine;\n    this.subs.push(on_js_1.on(socket, \"ping\", this.onping.bind(this)), on_js_1.on(socket, \"data\", this.ondata.bind(this)), on_js_1.on(socket, \"error\", this.onerror.bind(this)), on_js_1.on(socket, \"close\", this.onclose.bind(this)), on_js_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n  }\n  /**\n   * Called upon a ping.\n   *\n   * @private\n   */\n\n\n  onping() {\n    this.emitReserved(\"ping\");\n  }\n  /**\n   * Called with data.\n   *\n   * @private\n   */\n\n\n  ondata(data) {\n    this.decoder.add(data);\n  }\n  /**\n   * Called when parser fully decodes a packet.\n   *\n   * @private\n   */\n\n\n  ondecoded(packet) {\n    this.emitReserved(\"packet\", packet);\n  }\n  /**\n   * Called upon socket error.\n   *\n   * @private\n   */\n\n\n  onerror(err) {\n    debug(\"error\", err);\n    this.emitReserved(\"error\", err);\n  }\n  /**\n   * Creates a new socket for the given `nsp`.\n   *\n   * @return {Socket}\n   * @public\n   */\n\n\n  socket(nsp, opts) {\n    let socket = this.nsps[nsp];\n\n    if (!socket) {\n      socket = new socket_js_1.Socket(this, nsp, opts);\n      this.nsps[nsp] = socket;\n    }\n\n    return socket;\n  }\n  /**\n   * Called upon a socket close.\n   *\n   * @param socket\n   * @private\n   */\n\n\n  _destroy(socket) {\n    const nsps = Object.keys(this.nsps);\n\n    for (const nsp of nsps) {\n      const socket = this.nsps[nsp];\n\n      if (socket.active) {\n        debug(\"socket %s is still active, skipping close\", nsp);\n        return;\n      }\n    }\n\n    this._close();\n  }\n  /**\n   * Writes a packet.\n   *\n   * @param packet\n   * @private\n   */\n\n\n  _packet(packet) {\n    debug(\"writing packet %j\", packet);\n    const encodedPackets = this.encoder.encode(packet);\n\n    for (let i = 0; i < encodedPackets.length; i++) {\n      this.engine.write(encodedPackets[i], packet.options);\n    }\n  }\n  /**\n   * Clean up transport subscriptions and packet buffer.\n   *\n   * @private\n   */\n\n\n  cleanup() {\n    debug(\"cleanup\");\n    this.subs.forEach(subDestroy => subDestroy());\n    this.subs.length = 0;\n    this.decoder.destroy();\n  }\n  /**\n   * Close the current socket.\n   *\n   * @private\n   */\n\n\n  _close() {\n    debug(\"disconnect\");\n    this.skipReconnect = true;\n    this._reconnecting = false;\n    this.onclose(\"forced close\");\n    if (this.engine) this.engine.close();\n  }\n  /**\n   * Alias for close()\n   *\n   * @private\n   */\n\n\n  disconnect() {\n    return this._close();\n  }\n  /**\n   * Called upon engine close.\n   *\n   * @private\n   */\n\n\n  onclose(reason, description) {\n    debug(\"closed due to %s\", reason);\n    this.cleanup();\n    this.backoff.reset();\n    this._readyState = \"closed\";\n    this.emitReserved(\"close\", reason, description);\n\n    if (this._reconnection && !this.skipReconnect) {\n      this.reconnect();\n    }\n  }\n  /**\n   * Attempt a reconnection.\n   *\n   * @private\n   */\n\n\n  reconnect() {\n    if (this._reconnecting || this.skipReconnect) return this;\n    const self = this;\n\n    if (this.backoff.attempts >= this._reconnectionAttempts) {\n      debug(\"reconnect failed\");\n      this.backoff.reset();\n      this.emitReserved(\"reconnect_failed\");\n      this._reconnecting = false;\n    } else {\n      const delay = this.backoff.duration();\n      debug(\"will wait %dms before reconnect attempt\", delay);\n      this._reconnecting = true;\n      const timer = this.setTimeoutFn(() => {\n        if (self.skipReconnect) return;\n        debug(\"attempting reconnect\");\n        this.emitReserved(\"reconnect_attempt\", self.backoff.attempts); // check again for the case socket closed in above events\n\n        if (self.skipReconnect) return;\n        self.open(err => {\n          if (err) {\n            debug(\"reconnect attempt error\");\n            self._reconnecting = false;\n            self.reconnect();\n            this.emitReserved(\"reconnect_error\", err);\n          } else {\n            debug(\"reconnect success\");\n            self.onreconnect();\n          }\n        });\n      }, delay);\n\n      if (this.opts.autoUnref) {\n        timer.unref();\n      }\n\n      this.subs.push(function subDestroy() {\n        clearTimeout(timer);\n      });\n    }\n  }\n  /**\n   * Called upon successful reconnect.\n   *\n   * @private\n   */\n\n\n  onreconnect() {\n    const attempt = this.backoff.attempts;\n    this._reconnecting = false;\n    this.backoff.reset();\n    this.emitReserved(\"reconnect\", attempt);\n  }\n\n}\n\nexports.Manager = Manager;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","Manager","engine_io_client_1","require","socket_js_1","parser","on_js_1","backo2_js_1","component_emitter_1","debug_1","debug","default","Emitter","constructor","uri","opts","_a","nsps","subs","path","installTimerFunctions","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","timeout","_readyState","_parser","encoder","Encoder","decoder","Decoder","_autoConnect","autoConnect","open","arguments","length","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","_reconnecting","attempts","reconnect","fn","indexOf","engine","Socket","socket","self","skipReconnect","openSubDestroy","on","onopen","errorSub","err","cleanup","emitReserved","timer","setTimeoutFn","close","emit","Error","autoUnref","unref","push","subDestroy","clearTimeout","connect","onping","bind","ondata","onerror","onclose","ondecoded","data","add","packet","nsp","_destroy","keys","active","_close","_packet","encodedPackets","encode","i","write","options","forEach","destroy","disconnect","reason","description","reset","delay","duration","onreconnect","attempt"],"sources":["F:/WebDev/Chat/client/node_modules/socket.io-client/build/cjs/manager.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst engine_io_client_1 = require(\"engine.io-client\");\nconst socket_js_1 = require(\"./socket.js\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst on_js_1 = require(\"./on.js\");\nconst backo2_js_1 = require(\"./contrib/backo2.js\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst debug = debug_1.default(\"socket.io-client:manager\"); // debug()\nclass Manager extends component_emitter_1.Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        engine_io_client_1.installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new backo2_js_1.Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = new engine_io_client_1.Socket(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on_js_1.on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on_js_1.on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on_js_1.on(socket, \"ping\", this.onping.bind(this)), on_js_1.on(socket, \"data\", this.ondata.bind(this)), on_js_1.on(socket, \"error\", this.onerror.bind(this)), on_js_1.on(socket, \"close\", this.onclose.bind(this)), on_js_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_js_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"closed due to %s\", reason);\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}